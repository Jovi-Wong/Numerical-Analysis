#ifndef _JOVI_WONG_
#define _JOVI_WONG_
#include <iostream>
#include <fstream>
#include <cmath>
#include <vector>
#include <string>
#define pi acos(-1)

using namespace std;

class Lattice
{
public:
	int D; // dimension of space
	int N; // how many test points at a single cordinate
	vector<vector<double>> point; // points in this space generated by input	
	Lattice(int d, int n, vector<double> pos);// construct a Lattice
	Lattice(string filename);
	vector<vector<int>> permutation; // permutation of exponents 
	vector<double> POS; // store the input vector pos 
	vector<double> poly(double x, double y); // interpolation
	int display(string filename);// output result into files in ./result directory
	double divdiff(int fenliang, vector<double>& v1, vector<double>& v2);
private:
	double nodef(int index, double x); // node function 
	double p(int m, double x, double y, int fenliang); // recursive process in poly(vector<double>)

	double q(int m, double x, double y, int fenliang); // be used in function p
};

vector<double> u1(double x, double y);//given by problem

vector<double> u2(double x, double y, double z);// given by problem

int test(string filename);

#endif
